// src/components/NewPostForm.js
import React, { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import "./AddPost.css";

const NewPostForm = () => {
    const [content, setContent] = useState('');
    const [statusMessage, setStatusMessage] = useState(null);
    const [selectedPage, setSelectedPage] = useState('');
    const [image, setImage] = useState(null);
    const [video, setVideo] = useState(null);

    const dispatch = useDispatch();
    const { userPages } = useSelector(state => ({
        userPages: state.auth?.pages || [],
    }));

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!content) {
            setStatusMessage('Le contenu de la publication ne peut pas être vide.');
            return;
        }
        if (!selectedPage) {
            setStatusMessage('Veuillez sélectionner une page.');
            return;
        }
        const page = userPages.find(page => page.id === selectedPage);
        // Ici, vous ajouteriez la logique pour l'envoi de fichiers image et vidéo avec `content`.
        // Vous devrez peut-être utiliser FormData pour envoyer des fichiers via l'API.

        setStatusMessage('Publication réussie sur la page !');
        setContent('');
        setSelectedPage('');
        setImage(null);
        setVideo(null);
    };

    const handleImageChange = (e) => {
        setImage(e.target.files[0]);
    };

    const handleVideoChange = (e) => {
        setVideo(e.target.files[0]);
    };

    return (
        <div className="new-post-form">
            <form onSubmit={handleSubmit}>
                <select value={selectedPage} onChange={(e) => setSelectedPage(e.target.value)} required>
                    <option value="" disabled>Sélectionner une page</option>
                    {userPages.map(page => (
                        <option key={page.id} value={page.id}>{page.name}</option>
                    ))}
                </select>
                <textarea
                    placeholder="Quoi de neuf ?"
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                    rows="4"
                    required
                />
                <input type="file" accept="image/*" onChange={handleImageChange} />
                <input type="file" accept="video/*" onChange={handleVideoChange} />
                {image && <p>Image sélectionnée : {image.name}</p>}
                {video && <p>Vidéo sélectionnée : {video.name}</p>}
                <button type="submit">Publier</button>
            </form>
            {statusMessage && <p>{statusMessage}</p>}
        </div>
    );
};

export default NewPostForm;
